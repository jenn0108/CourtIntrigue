<events>
  <!-- CONVERSATION EVENTS-->
  <!-- A initiates the approach to B. -->
  <!-- Opening conversation event.
  A = ROOT, B = TARGET.
  ROOT is initiating and has chosen TARGET to talk to.-->
  <event>
    <id>APPROACH_ACTION_EVENT_0</id>
    <description>You approach intent on starting a discussion...</description>
    <requirements>
      <action_id>APPROACH_ACTION</action_id>
      <is_male/>
      <is_adult/>
    </requirements>
    <options>
      <option>
        <label>OK</label>
        <exec>
          <set_scope name="TARGET">
            <trigger_event>
              <id>APPROACH_ACTION_EVENT_1</id>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
    </options>
  </event>
  <!-- Approach notification event.
  B = ROOT, A = TARGET.
  ROOT can refuse or accept to talk to TARGET.-->
  <event>
    <id>APPROACH_ACTION_EVENT_1</id>
    <description>$Target.Name$ would like to talk to you.</description>
    <options>
      <option>
        <label>Refuse</label>
        <willpower>
          <!-- Refusing conversations is harder when you are shy -->
          <trait_adversion type="SHY_TRAIT" cost="5"/>
        </willpower>
        <exec>
          <!-- Event refusing costs some observation ability -->
          <multiply_observe_chance>0.8</multiply_observe_chance>
          <set_scope name="TARGET">
            <!-- The initiator suffers from the same decrease -->
            <multiply_observe_chance>0.8</multiply_observe_chance>
            <trigger_event>
              <id>APPROACH_ACTION_EVENT_2</id>
            </trigger_event>
          </set_scope>
          <allow_event_selection/>
        </exec>
      </option>
      <option>
        <label>Accept</label>
        <willpower>
          <!-- Gregarious people always want to talk! -->
          <trait_desire type="GREGARIOUS_TRAIT" cost="5"/>
        </willpower>
        <exec>
          <!-- An actual conversation drastically decreases your ability to overhear things -->
          <multiply_observe_chance>0.1</multiply_observe_chance>
          <set_scope name="TARGET">
            <!-- An actual conversation drastically decreases your ability to overhear things -->
            <multiply_observe_chance>0.1</multiply_observe_chance>
            <trigger_event>
              <id>APPROACH_ACTION_EVENT_3</id>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
    </options>
  </event>
  <!-- Approach rejection notification
  A = ROOT, B = TARGET
  Conversation is over. B gets a turn still and A does not.-->
  <event>
    <id>APPROACH_ACTION_EVENT_2</id>
    <description>$Target.Name$ refuses to speak with you!</description>
    <options>
      <option>
        <label>What a jerk...</label>
        <exec>
          <apply_opinion_mod>
            <id>REFUSED_TO_SPEAK_TO_OPINION_MOD</id>
            <character>TARGET</character>
          </apply_opinion_mod>
        </exec>
      </option>
    </options>
  </event>
  <!-- Approach acceptance notification.
  A = ROOT, B = TARGET
  A now gets to choose a topic.-->
  <event>
    <id>APPROACH_ACTION_EVENT_3</id>
    <description>$Target.Name$ accepts.  What would you like to discuss?</description>
    <options>
      <option>
        <label>Weather</label>
        <exec>
          <set_scope name="TARGET">
            <trigger_event>
              <id>APPROACH_ACTION_WEATHER</id>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
      <option>
        <label>Hire for a job...</label>
        <requirements>
          <has_job>KING_JOB</has_job>
          <test_event_options>
            <id>KING_APPROACH_GIVE_JOB_0</id>
            <parameters Candidate="TARGET"/>
          </test_event_options>
        </requirements>
        <exec>
          <trigger_event>
            <id>KING_APPROACH_GIVE_JOB_0</id>
            <parameters Candidate="TARGET"/>
          </trigger_event>
        </exec>
      </option>
      <option>
        <label>Ask for taxes</label>
        <requirements>
          <has_job>STEWARD_JOB</has_job>
          <set_scope name="TARGET">
            <not>
              <has_job>KING_JOB</has_job>
            </not>
          </set_scope>
        </requirements>
        <exec>
          <set_scope name="TARGET">
            <trigger_event>
              <id>STEWARD_COLLECT_TAXES_EVENT_0</id>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
      <option>
        <label>Pay taxes</label>
        <requirements>
          <set_scope name="TARGET">
            <has_job>STEWARD_JOB</has_job>
          </set_scope>
          <var_ge name="GOLD">20</var_ge>
          <var_eq name="TaxDelinquent">1</var_eq>
        </requirements>
        <exec>
          <spend_gold>20</spend_gold>
          <set_scope name="TARGET">
            <get_gold>20</get_gold>
            <offset_variable name="TaxesCollected">1</offset_variable>
            <trigger_event>
              <id>STEWARD_GIVEN_OUTSTANDING_TAXES_EVENT</id>
            </trigger_event>
          </set_scope>
          <set_variable name="TaxDelinquent">0</set_variable>
          <observe_information>
            <id>GAVE_TAXES_TO_STEWARD_INFORMATION</id>
            <parameters TaxPayer="ROOT"/>
            <chance>50</chance>
          </observe_information>
        </exec>
      </option>
      <option>
        <label>Remit taxes to the King</label>
        <requirements>
          <has_job>STEWARD_JOB</has_job>
          <set_scope name="TARGET">
            <has_job>KING_JOB</has_job>
          </set_scope>
          <var_ge name="GOLD">100</var_ge>
          <var_ge name="TaxesCollected">5</var_ge>
        </requirements>
        <exec>
          <spend_gold>100</spend_gold>
          <set_scope name="TARGET">
            <get_gold>100</get_gold>
            <offset_variable name="TaxesReceived">50</offset_variable>
            <trigger_event>
              <id>KING_GIVEN_TAXES_FROM_STEWARD_EVENT</id>
            </trigger_event>
          </set_scope>
          <offset_variable name="TaxesCollected">-5</offset_variable>
        </exec>
      </option>
      <option>
        <label>Speak about someone positively</label>
        <exec>
          <choose_character name="ABOUT">
            <exec>
              <set_scope name="ROOT">
                <trigger_event>
                  <id>POSITIVE_TALK_EVENT</id>
                  <parameters To="TARGET" About="ABOUT"/>
                </trigger_event>
              </set_scope>
            </exec>
          </choose_character>
        </exec>
      </option>
      <option>
        <label>Speak about someone negatively</label>
        <exec>
          <choose_character name="ABOUT">
            <exec>
              <set_scope name="ROOT">
                <trigger_event>
                  <id>NEGATIVE_TALK_EVENT</id>
                  <parameters To="TARGET" About="ABOUT"/>
                </trigger_event>
              </set_scope>
            </exec>
          </choose_character>
        </exec>
      </option>
    </options>
  </event>
  <event>
    <id>POSITIVE_TALK_EVENT</id>
    <description>What would you like to say about $About.Name$</description>
    <parameters>
      <parameter type="character">To</parameter>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>Say nice things about $About.Name$</label>
        <exec>
          <set_scope name="To">
            <trigger_event>
              <id>SAY_NICE_THINGS</id>
              <parameters About="About"/>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
      <option>
        <label>Tell information about $About.Name$</label>
        <requirements>
          <has_information about="About" type="POSITIVE"/>
        </requirements>
        <exec>
          <set_scope name="To">
            <tell_information overhear="5" type="POSITIVE" about="About">
              <trigger_event>
                <id>LEARNED_INFOMATION_EVENT</id>
                <parameters NewInformation="TOP"/>
              </trigger_event>
            </tell_information>
          </set_scope>
        </exec>
      </option>
    </options>
  </event>
  <event>
    <id>NEGATIVE_TALK_EVENT</id>
    <description>What would you like to say about $About.Name$</description>
    <parameters>
      <parameter type="character">To</parameter>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>Say nasty things about $About.Name$</label>
        <exec>
          <set_scope name="To">
            <trigger_event>
              <id>SAY_MEAN_THINGS</id>
              <parameters About="About"/>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
      <option>
        <label>Tell information about $About.Name$</label>
        <requirements>
          <has_information about="About" type="NEGATIVE"/>
        </requirements>
        <exec>
          <set_scope name="To">
            <tell_information overhear="5" type="NEGATIVE" about="About">
              <trigger_event>
                <id>LEARNED_INFOMATION_EVENT</id>
                <parameters NewInformation="TOP"/>
              </trigger_event>
            </tell_information>
          </set_scope>
        </exec>
      </option>
    </options>
  </event>
  <!-- Initiating character just said nice things about.
  A = ROOT, B = TARGET
  A has just told B nice things about "About".-->
  <event>
    <id>SAY_NICE_THINGS</id>
    <description>$TARGET.Name$ says nice things about $About.Name$</description>
    <parameters>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>Agree</label>
        <exec>
          <apply_opinion_mod>
            <id>AGREE_THIRD_PARTY</id>
            <character>TARGET</character>
          </apply_opinion_mod>
          <set_scope name="TARGET">
            <trigger_event>
              <id>AGREE_NICE_THINGS</id>
              <parameters About="About"/>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
      <option>
        <label>Disagree</label>
        <exec>
          <apply_opinion_mod>
            <id>DISAGREE_THIRD_PARTY</id>
            <character>TARGET</character>
          </apply_opinion_mod>
          <set_scope name="TARGET">
            <trigger_event>
              <id>DISAGREE_NICE_THINGS</id>
              <parameters About="About"/>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
    </options>
  </event>
  <!-- Initiating character just said mean things about.
  A = ROOT, B = TARGET
  A has just told B nice things about "About".-->
  <event>
    <id>SAY_MEAN_THINGS</id>
    <description>$TARGET.Name$ says mean things about $About.Name$</description>
    <parameters>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>Agree</label>
        <exec>
          <apply_opinion_mod>
            <id>AGREE_THIRD_PARTY</id>
            <character>TARGET</character>
          </apply_opinion_mod>
          <set_scope name="TARGET">
            <trigger_event>
              <id>AGREE_MEAN_THINGS</id>
              <parameters About="About"/>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
      <option>
        <label>Disagree</label>
        <exec>
          <apply_opinion_mod>
            <id>DISAGREE_THIRD_PARTY</id>
            <character>TARGET</character>
          </apply_opinion_mod>
          <set_scope name="TARGET">
            <trigger_event>
              <id>DISAGREE_MEAN_THINGS</id>
              <parameters About="About"/>
            </trigger_event>
          </set_scope>
        </exec>
      </option>
    </options>
  </event>
  <!-- Initiating character just said nice things about.
  A = TARGET, B = ROOT
  A agrees with nice things B said about "About".-->
  <event>
    <id>AGREE_NICE_THINGS</id>
    <description>$TARGET.Name$ agrees with the nice things you said about $About.Name$</description>
    <parameters>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>OK</label>
        <apply_opinion_mod>
          <id>AGREE_THIRD_PARTY</id>
          <character>TARGET</character>
        </apply_opinion_mod>
      </option>
    </options>
  </event>
  <!-- Initiating character just said nice things about.
  A = TARGET, B = ROOT
  A agress with nice things B said about "About".-->
  <event>
    <id>DISAGREE_NICE_THINGS</id>
    <description>$TARGET.Name$ disagrees with the nice things you said about $About.Name$</description>
    <parameters>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>OK</label>
        <apply_opinion_mod>
          <id>DISAGREE_THIRD_PARTY</id>
          <character>TARGET</character>
        </apply_opinion_mod>
      </option>
    </options>
  </event>
  <!-- Initiating character just said mean things about.
  A = TARGET, B = ROOT
  A agrees with nice things B said about "About".-->
  <event>
    <id>AGREE_MEAN_THINGS</id>
    <description>$TARGET.Name$ agrees with the mean things you said about $About.Name$</description>
    <parameters>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>OK</label>
        <apply_opinion_mod>
          <id>AGREE_THIRD_PARTY</id>
          <character>TARGET</character>
        </apply_opinion_mod>
      </option>
    </options>
  </event>
  <!-- Initiating character just said mean things about.
  A = TARGET, B = ROOT
  A agress with nice things B said about "About".-->
  <event>
    <id>DISAGREE_MEAN_THINGS</id>
    <description>$TARGET.Name$ disagrees with the mean things you said about $About.Name$</description>
    <parameters>
      <parameter type="character">About</parameter>
    </parameters>
    <options>
      <option>
        <label>OK</label>
        <apply_opinion_mod>
          <id>DISAGREE_THIRD_PARTY</id>
          <character>TARGET</character>
        </apply_opinion_mod>
      </option>
    </options>
  </event>
  <!-- Recieving information.
  B = ROOT, A = TARGET
  A has just told B a piece of information.-->
  <event>
    <id>LEARNED_INFOMATION_EVENT</id>
    <description>You learn $NewInformation.Description$</description>
    <parameters>
      <parameter type="information">NewInformation</parameter>
    </parameters>
    <options>
      <option>
        <label>OK</label>
      </option>
    </options>
  </event>
  <!-- Talking about weather.
  B = ROOT, A = TARGET
  A has just decided to talk about weather.-->
  <event>
    <id>APPROACH_ACTION_WEATHER</id>
    <description>You chat about the weather with $Target.Name$.</description>
    <options>
      <option>
        <label>OK</label>
      </option>
    </options>
  </event>
</events>